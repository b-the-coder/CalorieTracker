import { createSlice } from "@reduxjs/toolkit";
import {RootState} from '../../app/store';

interface AuthState {
    username: string| null,
    user_id: string|null
}

const initialState: AuthState = {
    username : null,
    user_id : null
}

const authSlice = createSlice({
    name: 'auth',
    initialState,
    //the state pass in for authSlice.reducer is the auth slice of state: state.auth
    reducers:{
        userLoggedIn(state, action){
            console.log(action.payload);
            state.username = action.payload.name;
            state.user_id = action.payload.sub
        },
        userLoggedOut(state){
            state.username = null;
            state.user_id = null
        }
    }

})

//selector functions live in slice.
//selector functions recieve rootstate and extract specific piece of state.
export const selectCurrenUser = (state:RootState) =>{return {
    name: state.auth.username,
    id:state.auth.user_id
}}

//creatSlice will generate action creator functions use reducers object keys
//the action generated by action creator will have the type field value as slicename/reducerfunctionname
export const  { userLoggedIn,userLoggedOut} = authSlice.actions;
export default authSlice.reducer